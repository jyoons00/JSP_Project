/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-14 13:29:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ohora;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ohora.domain.ProductDTO;
import ohora.domain.OptionDTO;

public final class prd_005fdetail_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/ohora/header.jsp", Long.valueOf(1731386878239L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1730336729000L));
    _jspx_dependants.put("jar:file:/C:/Users/USER/Desktop/OhoraTest/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectOhora/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/USER/Desktop/OhoraTest/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectOhora/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("ohora.domain.ProductDTO");
    _jspx_imports_classes.add("ohora.domain.OptionDTO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


    // productId를 사용해 DB에서 해당 상품 정보를 조회하여 화면에 출력하는 코드 작성
    String productId = request.getParameter("pdt_id");
    
    // product 객체를 명시적으로 선언하고 가져오기
    ProductDTO product = (ProductDTO) request.getAttribute("product"); 

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>오호라 팀 프로젝트</title>\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"http://localhost/jspPro/images/SiSt.ico\">\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<meta name=\"google\" content=\"notranslate\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/projectOhora/resources/cdn-main/prd_detail_view.css\">\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css\" />\n");
      out.write(" <script type=\"text/javascript\">\n");
      out.write("    window.hasProductCountSession = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write(" span.material-symbols-outlined{\n");
      out.write("    vertical-align: text-bottom;\n");
      out.write(" }  \n");
      out.write("</style>\n");

Integer userId = (Integer) session.getAttribute("userId");
Integer productCount = (Integer) session.getAttribute("productCount");

// 값 확인
System.out.println("header userId : " + userId);
System.out.println("header productCount : " + productCount);

String contextPath = request.getContextPath();

   // 세션에서 로그인 상태 확인
boolean isLoggedIn = (session.getAttribute("userId") != null);

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>오호라 팀 프로젝트</title>\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"http://localhost/jspPro/images/SiSt.ico\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<meta name=\"google\" content=\"notranslate\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/projectOhora/resources/cdn-main/header.css\">\r\n");
      out.write("<script src=\"http://localhost/jspPro/resources/cdn-main/example.js\"></script>\r\n");
      out.write("  <link\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      type=\"text/css\"\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\"\r\n");
      out.write("    />\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(" span.material-symbols-outlined{\r\n");
      out.write("    vertical-align: text-bottom;\r\n");
      out.write(" }  \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<div class=\"SP_topBanner\" style=\"display: block\">\r\n");
      out.write("      <div class=\"SP_layoutMin\">\r\n");
      out.write("        <div class=\"SP_topBn_inr\"></div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"xans-element- xans-layout xans-layout-statelogoff\">\r\n");
      out.write("          <div\r\n");
      out.write("            class=\"slide_banner_top slick-initialized slick-slider\"\r\n");
      out.write("            id=\"sltop_ban\"\r\n");
      out.write("          >\r\n");
      out.write("            <div class=\"slick-list draggable\">\r\n");
      out.write("              <div\r\n");
      out.write("                class=\"slick-track\"\r\n");
      out.write("                style=\"\r\n");
      out.write("                  opacity: 1;\r\n");
      out.write("                  width: 1200px;\r\n");
      out.write("                  transform: translate3d(0px, 0px, 0px);\r\n");
      out.write("                \"\r\n");
      out.write("              >\r\n");
      out.write("                <div\r\n");
      out.write("                  class=\"slick-slide slick-current slick-active\"\r\n");
      out.write("                  data-slick-index=\"0\"\r\n");
      out.write("                  aria-hidden=\"false\"\r\n");
      out.write("                  style=\"width: 1200px\"\r\n");
      out.write("                  tabindex=\"0\"\r\n");
      out.write("                >\r\n");
      out.write("                  <a\r\n");
      out.write("                    href=\"");
      out.print( contextPath );
      out.write("/ohora.do?event=eventnew\"\r\n");
      out.write("                    tabindex=\"0\"\r\n");
      out.write("                    style=\"display: block\"\r\n");
      out.write("                    ><img\r\n");
      out.write("                      src=\"https://ohora.kr/optimize/images/pc/common/PC_header_lamp2.webp\"\r\n");
      out.write("                      style=\"width: 100%; display: block\"\r\n");
      out.write("                  /></a>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 회원 -->\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"fix_position\" class=\"modify ham_modify\">\r\n");
      out.write("      <div id=\"SMS_fixed_wrap\" class=\"SMS_fixed_wrap\">\r\n");
      out.write("        <div class=\"SP_top_wrap\">\r\n");
      out.write("          <div class=\"layout_Top\">\r\n");
      out.write("            <div\r\n");
      out.write("              class=\"xans-element- xans-layout xans-layout-statelogoff SP_gnb_inr\"\r\n");
      out.write("            >\r\n");
      out.write("            <!-- 갱신함 / 경로는 아직 안넣음 -->\r\n");
      out.write("            ");

               if ( userId == null ) {
            
      out.write("<a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?join=signup\"><span class=\"title\">회원가입</span></a>|\r\n");
      out.write("                 <a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?login=gologin\" class=\"log\"><span class=\"title\">로그인</span></a>\r\n");
      out.write("            ");
      
               } else if  ( userId == 1001 ) {
            
      out.write("<a href=\"");
      out.print( contextPath );
      out.write("/admin/product.do\"><span class=\"title\">관리자페이지</span></a>|\r\n");
      out.write("                <a href=\"");
      out.print(contextPath );
      out.write("/logout/logout.do\" class=\"log\"><span class=\"title\">로그아웃</span></a>\r\n");
      out.write("            ");

               } else {
            
      out.write("<a href=\"");
      out.print( contextPath );
      out.write("/mypage/mypage.do?user_id=");
      out.print( userId );
      out.write("\"><span class=\"title\">마이페이지</span></a>|\r\n");
      out.write("                <a href=\"");
      out.print(contextPath );
      out.write("/logout/logout.do\" class=\"log\"><span class=\"title\">로그아웃</span></a>\r\n");
      out.write("              ");

               } 
            
      out.write("</div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"SMS_fixed_inner\">\r\n");
      out.write("          <div class=\"xans-element- xans-layout xans-layout-logotop fixed_logo\">\r\n");
      out.write("            <a\r\n");
      out.write("              href=\"");
      out.print( contextPath );
      out.write("/product/main.do\"\r\n");
      out.write("              style=\"display: block; text-align: center; margin-top: 30px\"\r\n");
      out.write("            >\r\n");
      out.write("              <img\r\n");
      out.write("                src=\"https://ohora.kr/web/upload/logo/ohora_BI_logotype_w.png\"\r\n");
      out.write("               \r\n");
      out.write("              />\r\n");
      out.write("            </a>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <!-- 헤더 주메뉴 -->\r\n");
      out.write("          <div class=\"gnb_menu_container\">\r\n");
      out.write("            <ul class=\"gnb_menu_wrap menu_1ul\">\r\n");
      out.write("              <li class=\"eng_font menu_1li submenu\">\r\n");
      out.write("                <a href=\"/projectOhora/product/list.do?sort=new\" style=\"color:black !important;\">new</a>\r\n");
      out.write("              </li>\r\n");
      out.write("              <li class=\"eng_font menu_1li submenu\">\r\n");
      out.write("                <a href=\"/projectOhora/product/list.do?sort=sales\" style=\"color:black !important;\">best</a>\r\n");
      out.write("              </li>\r\n");
      out.write("\r\n");
      out.write("              <li class=\"eng_font\">\r\n");
      out.write("                <a href=\"/projectOhora/product/list.do\" style=\"color:black !important;\">product</a>\r\n");
      out.write("\r\n");
      out.write("                <!-- 마우스 오버 시 나오는 영역(product) -->\r\n");
      out.write("                <ul class=\"menu_2ul\">\r\n");
      out.write("                  <li>\r\n");
      out.write("                    <a href=\"/projectOhora/product/list.do?catno=1&currentPage=1\"\r\n");
      out.write("                      ><span>네일</span></a\r\n");
      out.write("                    >\r\n");
      out.write("                  </li>\r\n");
      out.write("                  <li>\r\n");
      out.write("                    <a href=\"/projectOhora/product/list.do?catno=2&currentPage=1\"\r\n");
      out.write("                      ><span>페디</span></a\r\n");
      out.write("                    >\r\n");
      out.write("                  </li>\r\n");
      out.write("                  <li>\r\n");
      out.write("                    <a href=\"/projectOhora/product/list.do?catno=1&currentPage=1\"\r\n");
      out.write("                      ><span>커스텀</span></a\r\n");
      out.write("                    >\r\n");
      out.write("                  </li>\r\n");
      out.write("                  <li>\r\n");
      out.write("                    <a href=\"/projectOhora/product/list.do?catno=3&currentPage=1\"\r\n");
      out.write("                      ><span>케어 &amp; 툴</span></a\r\n");
      out.write("                    >\r\n");
      out.write("                  </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("                <!-- //마우스 오버 시 나오는 영역(product) -->\r\n");
      out.write("              </li>\r\n");
      out.write("\r\n");
      out.write("              <li class=\"eng_font menu_1li submenu\">\r\n");
      out.write("                <a href=\"/projectOhora/product/list.do?sort=outlet\" style=\"color:black !important;\" onclick=\"checkLogin(event)\">outlet</a>\r\n");
      out.write("              </li>\r\n");
      out.write("              <li class=\"eng_font\"><a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?event=event\" style=\"color:black !important;\">event</a></li>\r\n");
      out.write("              <li class=\"eng_font\">\r\n");
      out.write("                <a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?howto=howto\" style=\"color:black !important;\">how to</a>\r\n");
      out.write("              </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- //헤더 주메뉴 -->\r\n");
      out.write("\r\n");
      out.write("          <div class=\"icon_wrap\">\r\n");
      out.write("            <div class=\"small_icon search_fixed_btn\"></div>\r\n");
      out.write("            <div\r\n");
      out.write("              class=\"xans-element- xans-layout xans-layout-orderbasketcount small_icon m_cart common_cart\"\r\n");
      out.write("            >\r\n");
      out.write("              <!-- 고정 값 0 을 어떻게 동적으로 바꾸는가 -->\r\n");
      out.write("              ");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /ohora/header.jsp(185,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("<form action=\"");
                  out.print(contextPath );
                  out.write("/cart/useriscart.do\" method=\"post\" id=\"CartForm\">\r\n");
                  out.write("                     <a href=\"#\" id=\"goCart\">\r\n");
                  out.write("                         <b class=\"count EC-Layout-Basket-count\">");
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${productCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write("</b>\r\n");
                  out.write("                     </a>\r\n");
                  out.write("                 </form>\r\n");
                  out.write("             ");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            //  c:otherwise
            org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
            boolean _jspx_th_c_005fotherwise_005f0_reused = false;
            try {
              _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
              if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("<form action=\"");
                  out.print(contextPath );
                  out.write("/cart/nousercart.do\" method=\"post\" id=\"CartForm\">\r\n");
                  out.write("                     <a href=\"#\" id=\"goCart\">\r\n");
                  out.write("                         <b class=\"count EC-Layout-Basket-count\" >0</b>\r\n");
                  out.write("                     </a>\r\n");
                  out.write("                 </form>\r\n");
                  out.write("             ");
                  int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
              _jspx_th_c_005fotherwise_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
            }
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("</div>\r\n");
      out.write("            <div class=\"small_icon m_menu\"><a class=\"SMS_menu\"></a></div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    <!-- 검색 -->\r\n");
      out.write("    <div class=\"hd_search_container\" style=\"overflow: hidden; display: none\">\r\n");
      out.write("      <div class=\"SP_search_wrap\">\r\n");
      out.write("        <div class=\"SP_utilListSearch_inner\">\r\n");
      out.write("          <form\r\n");
      out.write("            id=\"searchBarForm\"\r\n");
      out.write("            name=\"\"\r\n");
      out.write("            action=\"/projectOhora/product/list.do\"\r\n");
      out.write("            method=\"get\"\r\n");
      out.write("            target=\"_self\"\r\n");
      out.write("            enctype=\"multipart/form-data\"\r\n");
      out.write("          >\r\n");
      out.write("            <input id=\"banner_action\" name=\"banner_action\" value=\"\" type=\"hidden\" />\r\n");
      out.write("            <div class=\"xans-element- xans-layout xans-layout-searchheader\">\r\n");
      out.write("          \r\n");
      out.write("              <fieldset>\r\n");
      out.write("                <legend style=\"display: none\">검색</legend>\r\n");
      out.write("                <input\r\n");
      out.write("                  id=\"keyword\"\r\n");
      out.write("                  name=\"keyword\"\r\n");
      out.write("                  fw-filter=\"\"\r\n");
      out.write("                  fw-label=\"검색어\"\r\n");
      out.write("                  fw-msg=\"\"\r\n");
      out.write("                  class=\"inputTypeText\"\r\n");
      out.write("                  placeholder=\"\"\r\n");
      out.write("                  onkeyup=\"SEARCH_HASHTAG.getHashtag($(this)); \"\r\n");
      out.write("                  autocomplete=\"off\"\r\n");
      out.write("                  onmousedown=\"SEARCH_BANNER.clickSearchForm(this)\"\r\n");
      out.write("                  value=\"\"\r\n");
      out.write("                  type=\"text\"\r\n");
      out.write("                /><button\r\n");
      out.write("                  type=\"button\"\r\n");
      out.write("                  class=\"SP_srh_submit_btn\"\r\n");
      out.write("                  onclick=\"SEARCH_BANNER.submitSearchBanner(this); return false;\"\r\n");
      out.write("                >\r\n");
      out.write("                  <span class=\"SP_cm_icon SP_black_search_icon\"></span>\r\n");
      out.write("                </button>\r\n");
      out.write("              </fieldset>\r\n");
      out.write("            </div>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("        <!--------------- 검색 키워드 --------------->\r\n");
      out.write("        <div class=\"SP_utilListKeyword_inner\">\r\n");
      out.write("          <ul>\r\n");
      out.write("            <li><a href=\"/projectOhora/product/list.do?sort=outlet\">#OUTLET 입장하기</a></li>\r\n");
      out.write("            <li><a href=\"/projectOhora/product/list.do\">#BEST 디자인 추천</a></li>\r\n");
      out.write("            <li><a href=\"a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?event=event6\">#첫구매 젤램프 증정</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!--------------- 검색 키워드 --------------->\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 더보기 -->\r\n");
      out.write("    <div class=\"hd_cate_container\" style=\"overflow: hidden; display: none\">\r\n");
      out.write("      <div class=\"SP_category_wrap\" style=\"margin-top: 172px;\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("      \r\n");
      out.write("          <div class=\"cate_wrap first\">\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("            <div class=\"big_txt\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?sort=new\">\r\n");
      out.write("                <span>new</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"/projectOhora/product/list.do?sort=new\">\r\n");
      out.write("                <span></span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"/projectOhora/product/list.do?sort=new\">\r\n");
      out.write("                <span></span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-top:50px\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?sort=sales\">\r\n");
      out.write("                <span>best</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a href=\"/projectOhora/product/list.do?catno=1&currentPage=1\">\r\n");
      out.write("                <span>네일</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a href=\"/projectOhora/product/list.do?catno=2&currentPage=1\">\r\n");
      out.write("                <span>페디</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"cate_wrap first\">\r\n");
      out.write("            <div class=\"big_txt\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?catno=1&currentPage=1\">\r\n");
      out.write("                <span>nail</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"/projectOhora/product/list.do?catno=1&currentPage=1\">\r\n");
      out.write("                <span>젤스트립</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-top:80px\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?catno=2&currentPage=1\">\r\n");
      out.write("                <span>pedi</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"/projectOhora/product/list.do?catno=2&currentPage=1\">\r\n");
      out.write("                <span>젤스트립</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"cate_wrap first\">\r\n");
      out.write("            <div class=\"big_txt\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?sort=outlet\">\r\n");
      out.write("                <span>outlet</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"big_txt\">\r\n");
      out.write("              <span></span>\r\n");
      out.write("\r\n");
      out.write("              <span></span>\r\n");
      out.write("\r\n");
      out.write("              <span></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-top:105px\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do\">\r\n");
      out.write("                <span>custom</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-top:38px\">\r\n");
      out.write("              <a class=\"eng_font big_\" href=\"/projectOhora/product/list.do?catno=3&currentPage=1\">\r\n");
      out.write("                <span>care &amp; tool</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <!--------- 첫번째 줄 메뉴(신제품 출시 관련 수정 영역) --------->\r\n");
      out.write("          <style>\r\n");
      out.write("          \r\n");
      out.write("          </style>\r\n");
      out.write("\r\n");
      out.write("          <!------- 두번째 줄 메뉴 ------>\r\n");
      out.write("          <div class=\"cate_wrap second\">\r\n");
      out.write("  \r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-left: 35px; margin-bottom: 42px;\">\r\n");
      out.write("              <a class=\"big_ eng_font\" href=\"");
      out.print( contextPath );
      out.write("/ohora.do?event=event\">\r\n");
      out.write("                <span>event</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-left: 35px;  margin-bottom: 42px;\">\r\n");
      out.write("              <a\r\n");
      out.write("                class=\"big_ eng_font\"\r\n");
      out.write("                href=\"#none\"\r\n");
      out.write("              >\r\n");
      out.write("                <span>review</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"big_txt\" style=\"margin-left: 35px;\">\r\n");
      out.write("              <a class=\"big_ eng_font\" href=\"");
      out.print( contextPath );
      out.write("/ohora.do?about=about\">\r\n");
      out.write("                <span style=\"margin-top: 10px;\">brand</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"");
      out.print( contextPath );
      out.write("/ohora.do?about=about\">\r\n");
      out.write("                <span>about</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"");
      out.print( contextPath );
      out.write("/ohora.do?membership=membership\">\r\n");
      out.write("                <span>membership</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"");
      out.print( contextPath );
      out.write("/ohora.do?magazine=magazine\">\r\n");
      out.write("                <span>magazine</span>\r\n");
      out.write("              </a>\r\n");
      out.write("              <a class=\"\" href=\"#empty\">\r\n");
      out.write("                <span>collaboration</span>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!------ 두번째 줄 메뉴 ------>\r\n");
      out.write("          <!------ 세번째 줄 메뉴 ------>\r\n");
      out.write("          <div class=\"cate_wrap crew\">\r\n");
      out.write("  <!--오호라 크루 추천-->\r\n");
      out.write("  <div\r\n");
      out.write("    class=\"common_reco_section recommend_crew slider-container slider-container-initialized slider-container-horizontal load-complete\"\r\n");
      out.write("     style=\"margin-left: 100px\"\r\n");
      out.write("  >\r\n");
      out.write("    <h3>오호라 크루 추천</h3>\r\n");
      out.write("    <div\r\n");
      out.write("      df-banner-code=\"common-recommend\"\r\n");
      out.write("      class=\"recommend_banner_wrap slider-wrapper df-bannermanager df-bannermanager-common-recommend\"\r\n");
      out.write("      style=\"width: 260px; height: 231px\"\r\n");
      out.write("    >\r\n");
      out.write("      <div\r\n");
      out.write("        df-banner-clone=\"\"\r\n");
      out.write("        class=\"SP_eventBn_li slider-slide slider-slide-prev\"\r\n");
      out.write("      >\r\n");
      out.write("        <a href=\"#empty\"\r\n");
      out.write("          ><div class=\"imgBox\">\r\n");
      out.write("            <img\r\n");
      out.write("              src=\"https://ohora.kr/web/upload/appfiles/ZaReJam3QiELznoZeGGkMG/94fad6d6474acf635b9c771591480a7c.png\"\r\n");
      out.write("              alt=\"페이코 상시 12% 할인\"\r\n");
      out.write("            />\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"txtBox\">페이코 상시 12% 할인</div></a\r\n");
      out.write("        >\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- 스와이퍼 스크롤 -->\r\n");
      out.write("    <div class=\"slider-scrollbar\">\r\n");
      out.write("      <div\r\n");
      out.write("        class=\"slider-scrollbar-drag\"\r\n");
      out.write("        style=\"transition-duration: 0ms; transform: translate3d(0px, 0px, 0px); width: 80px;\"\r\n");
      out.write("      ></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <span\r\n");
      out.write("      class=\"slider-notification\"\r\n");
      out.write("      aria-live=\"assertive\"\r\n");
      out.write("      aria-atomic=\"true\"\r\n");
      out.write("    ></span>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!--// 오호라 크루 추천-->\r\n");
      out.write("  <div class=\"third_cate\" style=\"margin-left: 108px; margin-top: 65px;\">\r\n");
      out.write("    <a href=\"https://oe9lp.channel.io/home\"><span style=\"font-size:13px ; color:black !important;\" >CS Center &nbsp;|</span></a>\r\n");
      out.write("    <a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?notice=notice\"><span style=\"font-size:13px ; color:black !important;\"> &nbsp; Notice &nbsp;|</span></a>\r\n");
      out.write("    <a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?FAQ=FAQ\"><span style=\"font-size:13px ; color:black !important;\"> &nbsp; FAQ &nbsp;|</span></a>\r\n");
      out.write("    <a href=\"");
      out.print( contextPath );
      out.write("/ohora.do?howto=howto\"><span style=\"font-size:13px ; color:black !important;\"> &nbsp; How to</span></a>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </div> <!-- sticky 적용을 위한 태그-->\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("  <!-- 슬라이더 초기화 코드 -->\r\n");
      out.write("   <!-- 슬라이더 초기화 코드 -->\r\n");
      out.write("    <script>\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("        $(\".slide_banner_top\").slick({\r\n");
      out.write("          infinite: true,\r\n");
      out.write("          speed: 300,\r\n");
      out.write("          slidesToShow: 1,\r\n");
      out.write("          dots: false,\r\n");
      out.write("          arrows: false,\r\n");
      out.write("          autoplay: true,\r\n");
      out.write("          autoplaySpeed: 3000,\r\n");
      out.write("          swipe: true,\r\n");
      out.write("          pauseOnHover: false,\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("      $(\"#goCart\").on(\"click\", function(event){\r\n");
      out.write("         // alert(\"test\");\r\n");
      out.write("         event.preventDefault();\r\n");
      out.write("         $(\"#CartForm\").submit();\r\n");
      out.write("      });\r\n");
      out.write("   </script>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("      $(document).ready(function() {\r\n");
      out.write("        const searchContainer = $('.hd_search_container');\r\n");
      out.write("        const cateContainer = $('.hd_cate_container');\r\n");
      out.write("\r\n");
      out.write("        searchContainer.hide();\r\n");
      out.write("        cateContainer.hide();\r\n");
      out.write("\r\n");
      out.write("        // 검색 버튼 클릭 시\r\n");
      out.write("        $('.small_icon.search_fixed_btn').on('click', function() {\r\n");
      out.write("          if (!searchContainer.is(':visible')) {\r\n");
      out.write("            cateContainer.stop(true, true).fadeOut(300, function() {\r\n");
      out.write("              searchContainer.stop(true, true).slideDown(500).animate({ opacity: 1 }, { duration: 10 });\r\n");
      out.write("              $('#keyword').focus();\r\n");
      out.write("            });\r\n");
      out.write("          } else {\r\n");
      out.write("            searchContainer.stop(true, true).slideUp(500).animate({ opacity: 0 }, { duration: 10 });\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 더보기 버튼 클릭 시\r\n");
      out.write("        $('.SMS_menu').on('click', function() {\r\n");
      out.write("          if (!cateContainer.is(':visible')) {\r\n");
      out.write("            searchContainer.stop(true, true).fadeOut(300, function() {\r\n");
      out.write("              cateContainer.stop(true, true).slideDown(500).animate({ opacity: 1 }, { duration: 10 });\r\n");
      out.write("              $('#keyword').focus();\r\n");
      out.write("            });\r\n");
      out.write("          } else {\r\n");
      out.write("            cateContainer.stop(true, true).slideUp(500).animate({ opacity: 0 }, { duration: 10 });\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("     <script>\r\n");
      out.write("      function checkLogin(event) {\r\n");
      out.write("          // 로그인 여부 확인\r\n");
      out.write("          if (!isLoggedIn) {\r\n");
      out.write("              // 로그인되지 않은 경우 경고창 표시 및 링크 이동 막기\r\n");
      out.write("              event.preventDefault(); // 기본 링크 이동 동작 취소\r\n");
      out.write("              alert(\"회원만 접근 가능합니다.\");\r\n");
      out.write("          }\r\n");
      out.write("          // 로그인된 경우 링크 이동 (기본 동작)\r\n");
      out.write("      }\r\n");
      out.write("   </script>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    // JavaScript 변수에 로그인 상태 전달\r\n");
      out.write("    var isLoggedIn = ");
      out.print( isLoggedIn );
      out.write(";\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<script>\r\n");
      out.write("//비회원 전용 장바구니 카운트 관리자\r\n");
      out.write("const NonMemberCartManager = {\r\n");
      out.write("    lastCookieValue: null,\r\n");
      out.write("\r\n");
      out.write("    // 쿠키값 가져오기\r\n");
      out.write("    getBasketCookie() {\r\n");
      out.write("        const cookie = document.cookie\r\n");
      out.write("            .split('; ')\r\n");
      out.write("            .find(row => row.startsWith('basketItems='));\r\n");
      out.write("        return cookie ? cookie.split('=')[1] : null;\r\n");
      out.write("    },\r\n");
      out.write("\r\n");
      out.write("    // 카운트 업데이트\r\n");
      out.write("    updateCount() {\r\n");
      out.write("        try {\r\n");
      out.write("            const cookieValue = this.getBasketCookie();\r\n");
      out.write("            if (cookieValue) {\r\n");
      out.write("                const basketItems = JSON.parse(decodeURIComponent(cookieValue));\r\n");
      out.write("                if (Array.isArray(basketItems)) {\r\n");
      out.write("                    const countElement = document.querySelector('.EC-Layout-Basket-count');\r\n");
      out.write("                    if (countElement) {\r\n");
      out.write("                        countElement.textContent = basketItems.length;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("            console.error('장바구니 쿠키 처리 오류:', error);\r\n");
      out.write("        }\r\n");
      out.write("    },\r\n");
      out.write("\r\n");
      out.write("    // 쿠키 변경 확인 및 업데이트\r\n");
      out.write("    checkAndUpdate() {\r\n");
      out.write("        const currentCookie = this.getBasketCookie();\r\n");
      out.write("        if (currentCookie !== this.lastCookieValue) {\r\n");
      out.write("            this.lastCookieValue = currentCookie;\r\n");
      out.write("            this.updateCount();\r\n");
      out.write("        }\r\n");
      out.write("    },\r\n");
      out.write("\r\n");
      out.write("    // 모니터링 시작\r\n");
      out.write("    startMonitoring() {\r\n");
      out.write("        // 초기값 설정\r\n");
      out.write("        this.lastCookieValue = this.getBasketCookie();\r\n");
      out.write("        this.updateCount();\r\n");
      out.write("\r\n");
      out.write("        // 주기적으로 쿠키 변경 확인\r\n");
      out.write("        setInterval(() => {\r\n");
      out.write("            this.checkAndUpdate();\r\n");
      out.write("        }, 100);\r\n");
      out.write("    }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("// 페이지 로드 시 비회원인 경우에만 모니터링 시작\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    const userId = \"");
      out.print( userId );
      out.write("\";\r\n");
      out.write("    \r\n");
      out.write("    // 비회원일 때만 쿠키 기반 카운트 모니터링 실행\r\n");
      out.write("    if (userId === \"null\" || userId === \"\") {\r\n");
      out.write("        NonMemberCartManager.startMonitoring();\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 장바구니 담기 버튼 클릭 시 비회원인 경우에만 즉시 업데이트 트리거\r\n");
      out.write("document.querySelector('.SP_cartBtn')?.addEventListener('click', function() {\r\n");
      out.write("    const userId = \"");
      out.print( userId );
      out.write("\";\r\n");
      out.write("    if (userId === \"null\" || userId === \"\") {\r\n");
      out.write("        setTimeout(() => {\r\n");
      out.write("            NonMemberCartManager.checkAndUpdate();\r\n");
      out.write("        }, 100);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<button id=\"btnTotalAmountUpdate\" style=\"display: none;\">수량실시간변경</button>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!------------------------------ 상품 상세 영역 -------------------------------->\n");
      out.write("<div class=\"SP_prdDtail_wrap renew_prdDetail\">\n");
      out.write("    <!------------------------------ 레이아웃 -------------------------------->\n");
      out.write("    <div class=\"SP_layoutFix\">\n");
      out.write("      <!------------------------------ product_detail 모듈 -------------------------------->\n");
      out.write("      <div class=\"xans-element- xans-product xans-product-detail\"><!--\n");
      out.write("            $coupon_download_page = /coupon/coupon_productdetail.html\n");
      out.write("            -->\n");
      out.write("\n");
      out.write("  <!------------------------------ SP_detailArea_wrap -------------------------------->\n");
      out.write("  <div class=\"SP_detailThumbnail_wrap\">\n");
      out.write("    <!-- 큰 이미지 -->\n");
      out.write("    <div class=\"SP_thumbnail\">\n");
      out.write("        <img id=\"mainImage\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"BigImage\">\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- 작은 이미지 목록 -->\n");
      out.write("    <div class=\"SP_listImg\">\n");
      out.write("        <ul>\n");
      out.write("            <li><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"Thumb 1\" onmouseover=\"changeImage('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\"></li>\n");
      out.write("            <li><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"Thumb 2\" onmouseover=\"changeImage('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\"></li>\n");
      out.write("            <!-- <li><img src=\"https://www.ohora.kr/web/product/extra/small/202410/20ea938442221e7f2d275a865172a656.jpg\" alt=\"Thumb 3\" onmouseover=\"changeImage('image/prd_image/마롱네일4.jpg')\"></li>\n");
      out.write("            <li><img src=\"https://www.ohora.kr/web/product/extra/small/202410/7ad8d1c56f1046c160fa9395f443c187.jpg\" alt=\"Thumb 4\" onmouseover=\"changeImage('image/prd_image/마롱네일1.jpg')\"></li> -->\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // 큰 이미지를 변경하는 function\n");
      out.write("    function changeImage(imageSrc) {\n");
      out.write("        document.getElementById('mainImage').src = imageSrc;\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!------------------------------ //상품 이미지 영역 -------------------------------->\n");
      out.write("          <!------------------------------ 상품 정보 영역 -------------------------------->\n");
      out.write("          <div class=\"SP_detailPrdOpt_wrap\" style=\"opacity: 1;\">\n");
      out.write("            <!------------------------------ 상품 정보 영역 inner -------------------------------->\n");
      out.write("            <div class=\"SP_detailPrdOpt_inr\">\n");
      out.write("              \n");
      out.write("                        <div class=\"color displaynone\">\n");
      out.write("                        <div module=\"product_Colorchip\">\n");
      out.write("                        <span class=\"chips\" style=\"background-color:\"></span>\n");
      out.write("                        <span class=\"chips\" style=\"background-color:\"></span>\n");
      out.write("                        </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("\n");
      out.write("              <!-------------------------- 상품 정보 호출 ---------------------------->\n");
      out.write("              <div class=\"xans-element- xans-product xans-product-detaildesign SP_dtPrdOptionList_wrap\"><!--\n");
      out.write("                            출력 갯수 지정 변수, 없으면 설정된 전체가 나옵니다.\n");
      out.write("                            count = 10\n");
      out.write("                            -->\n");
      out.write("  <ul class=\"SP_prdListItemInfo\" style=\"display: block;\">\n");
      out.write("	  <li class=\"display_상품명 xans-record- SP_dfList_prdName\">\n");
      out.write("	  <span class=\"title\" style=\"\"><!--<span style=\"\">상품명</span>--></span><span class=\"SP_detail_content\" style=\"\"><span style=\"\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></span>\n");
      out.write("	  </li><li class=\"xans-record- review_count\"><span class=\"SP_detail_content\">리뷰 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_review_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></li>\n");
      out.write("	                  <!-- <li class=\"display_영문상품명 xans-record- SP_dfList_engName\" style=\"display: list-item;\">\n");
      out.write("	  <span class=\"title\" style=\"\"><span style=\"\">영문상품명</span>></span><span class=\"SP_detail_content\" style=\"\"><span style=\"\">N Cooing Nails</span></span>\n");
      out.write("	  </li> -->\n");
      out.write("		\n");
      out.write("	  <li class=\"display_가격 xans-record- SP_dfList_price strike\" style=\"display: list-item;\">\n");
      out.write("	  <span class=\"title\" style=\"\">가격</span><span class=\"SP_detail_content\" style=\"\"><span style=\"\"><strong id=\"span_product_price_text\" style=\"text-decoration: line-through;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong><input id=\"product_price\" name=\"product_price\" value=\"\" type=\"hidden\" style=\"\"></span><span class=\"salesPrice\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_discount_amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span><span class=\"dcPercent\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_discount_rate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("%</span></span>\n");
      out.write("	  </li>\n");
      out.write("	  \n");
      out.write("	");
 if (product.hasOptions()) { 
      out.write("<!-- 옵션 선택 드롭다운 출력 -->\n");
      out.write("	    <span class=\"option\">옵션 선택 : </span> <select class=\"option_select\" id=\"productOptionSelect\">\n");
      out.write("	        <option value=\"\" selected>옵션을 선택해주세요</option>\n");
      out.write("	        <option value=\"\" disabled>------------------</option>\n");
      out.write("	        ");
 for (OptionDTO option : product.getOptions()) { 
      out.write("<option value=\"");
      out.print( option.getOpt_id() );
      out.write("\" data-option-name=\"");
      out.print( option.getOpt_name() );
      out.write("\" data-option-price=\"");
      out.print( option.getOpt_amount() );
      out.write("\">\n");
      out.write("	                ");
      out.print( option.getOpt_name() );
      out.write("</option>\n");
      out.write("	        ");
 } 
      out.write("</select>\n");
      out.write("	");
 } else { 
      out.write("<!-- 수량 선택 출력 -->\n");
      out.write("	    <div>\n");
      out.write("	        <label><p style=\"display: inline-block; padding-right: 90px\">수량:</p></label>\n");
      out.write("	        <button type=\"button\" onclick=\"decrementQuantity()\" class=\"main_option_down\" style=\"padding: 5px 10px; border: 1px solid  #ddd\" >-</button>\n");
      out.write("	        <input type=\"text\" value=\"1\" id=\"option_main_quantity\" product-id = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\n");
      out.write("	        <button type=\"button\" onclick=\"incrementQuantity()\" class=\"main_option_up\" style=\"padding: 5px 10px; border: 1px solid  #ddd\">+</button>\n");
      out.write("	    </div>\n");
      out.write("	");
 } 
      out.write("<script>\n");
      out.write("	\n");
      out.write("    \n");
      out.write("\n");
      out.write("    // 수량 감소 기능\n");
      out.write("    function decrementQuantity() {\n");
      out.write("        var quantityInput = document.getElementById(\"option_main_quantity\");\n");
      out.write("        var currentValue = parseInt(quantityInput.value);\n");
      out.write("\n");
      out.write("        if (currentValue > 1) {\n");
      out.write("            quantityInput.value = currentValue - 1;\n");
      out.write("            \n");
      out.write("        } else {\n");
      out.write("            alert(\"최소 주문수량은 1개 입니다\");\n");
      out.write("        }\n");
      out.write("        calculateMainProductTotalPrice();\n");
      out.write("        $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("        lastPriceFunc();\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // 수량 증가 기능\n");
      out.write("    function incrementQuantity() {\n");
      out.write("        var quantityInput = document.getElementById(\"option_main_quantity\");\n");
      out.write("        var currentValue = parseInt(quantityInput.value);\n");
      out.write("\n");
      out.write("        quantityInput.value = currentValue + 1;\n");
      out.write("        calculateMainProductTotalPrice();\n");
      out.write("        $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("        lastPriceFunc();\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("	\n");
      out.write("	<script>\n");
      out.write("	// 옵션 선택 시 동적으로 상품 추가\n");
      out.write("	//document.getElementById(\"productOptionSelect\").addEventListener(\"change\", function() {\n");
      out.write("		$(\".option_select\").on(\"change\", function () {\n");
      out.write("			\n");
      out.write("	    var selectedOption = this.options[this.selectedIndex];\n");
      out.write("\n");
      out.write("	    // 선택된 옵션의 ID, 이름, 가격을 가져옴 + 메인 상품 이름\n");
      out.write("	    var productId = selectedOption.value;\n");
      out.write("	    var optionName = selectedOption.getAttribute(\"data-option-name\");\n");
      out.write("	    var productName = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 상품명 가져오기\n");
      out.write("	    var productAmount = Number(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\n");
      out.write("\n");
      out.write("	    // 값이 없을 경우 처리하지 않음\n");
      out.write("	    if (!productId) return;\n");
      out.write("\n");
      out.write("	    // 이미 추가된 상품인지 확인\n");
      out.write("	    if ($(\".add_product[data-option-add-index='\" + productId + \"']\").length > 0) {\n");
      out.write("	        alert(\"해당 옵션이 이미 추가되었습니다.\");\n");
      out.write("	        return;\n");
      out.write("	    }\n");
      out.write("\n");
      out.write("	    // 가격 형식 변환\n");
      out.write("	    var formattedPrice = productAmount.toLocaleString();\n");
      out.write("\n");
      out.write("	    // 동적으로 회색 영역에 추가할 상품 HTML 템플릿\n");
      out.write("	    var additionalProductHtml = `\n");
      out.write("				    <div class=\"add_product\" data-option-add-index=\"${productId}\">\n");
      out.write("				        <div class=\"product\">\n");
      out.write("				            <p>${productName}<br> - <span style=\"display: inline;\">${optionName}</span></p>\n");
      out.write("				        </div>\n");
      out.write("				        <!-- 수량 선택 요소를 상품 설명 아래로 이동 -->\n");
      out.write("				        <div class=\"quantity\">\n");
      out.write("				            <a href=\"javascript:void(0);\" id=\"selectedDown\" class=\"down eAddProductQuantityDownClass\" data-target=\"option_add_box${productId}_down\">-</a>\n");
      out.write("				            <input type=\"text\" id=\"option_add_box${productId}_quantity\" name=\"quantity_opt[]\" class=\"quantity_opt eAddProductQuantityClass\" value=\"1\" product-id=\"${productId}\" readonly>\n");
      out.write("				            <a href=\"javascript:void(0);\" id=\"selectedUp\" class=\"up eAddProductQuantityUpClass\" data-target=\"option_add_box${productId}_up\">+</a>\n");
      out.write("				        </div>\n");
      out.write("				        <div class=\"right\">\n");
      out.write("				            <span id=\"option_add_box${productId}_price\">\n");
      out.write("				                <input type=\"hidden\" class=\"add_product_option_box_price\" value=\"${productAmount}\" product-id=\"${productId}\">\n");
      out.write("				                <span class=\"ec-front-product-item-price\" product-id=\"${productId}\">${formattedPrice}</span>원\n");
      out.write("				            </span>\n");
      out.write("				        </div>\n");
      out.write("				        <div class=\"delete\" onclick=\"removeProduct(${productId})\">\n");
      out.write("				            ×\n");
      out.write("				        </div>\n");
      out.write("				    </div>\n");
      out.write("				`;\n");
      out.write("        \n");
      out.write("	    // 회색 영역에 추가 상품 삽입\n");
      out.write("	    $(\"#additional-product-list\").append(additionalProductHtml);\n");
      out.write("	    $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("	    lastPriceFunc();\n");
      out.write("		})\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("\n");
      out.write("	\n");
      out.write("	// 선택 상품 삭제function\n");
      out.write("	function removeProduct(productId) {\n");
      out.write("    $(\".add_product[data-option-add-index='\" + productId + \"']\").remove();\n");
      out.write("	}\n");
      out.write("	</script>\n");
      out.write("	  \n");
      out.write("		\n");
      out.write("	  <!-- <li class=\"xans-record- SP_dfList_quantity\" style=\"display: list-item;\">\n");
      out.write("	  			<span class=\"title\" style=\"\">수량</span><span class=\"SP_detail_content\">\n");
      out.write("	  			<a href=\"#none\" class=\"down\"></a><input id=\"quantity_clone\" value=\"1\" type=\"text\" readonly=\"\"><a href=\"#none\" class=\"up\"></a></span>\n");
      out.write("	  		</li> -->\n");
      out.write("	  <li class=\"xans-record- SP_dfList_mileageInfo\" style=\"display: list-item;\"></li> \n");
      out.write("  </ul>\n");
      out.write("  \n");
      out.write(" \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("\n");
      out.write("  <!-- <span class=\"title\" style=\"\"><span style=\"\">할인판매가</span></span><span class=\"SP_detail_content\" style=\"\"><span style=\"\"><span style=\"\"><span id=\"span_product_price_sale\" style=\"\">12,580 </span></span></span></span> -->\n");
      out.write("  \n");
      out.write("  <!-- <li class=\"display_배송비 xans-record- SP_dfList_deliveryInfo\" style=\"display: list-item;\">\n");
      out.write("  <span class=\"title\" style=\"\"><span style=\"\">배송비</span></span><span class=\"SP_detail_content\" style=\"\"><span style=\"\"><span class=\"delv_price_B\" style=\"\"><input id=\"delivery_cost_prepaid\" name=\"delivery_cost_prepaid\" value=\"P\" type=\"hidden\" style=\"\"><strong>3,000</strong> (50,000 이상 구매 시 무료)</span></span></span>\n");
      out.write("  </li> -->\n");
      out.write("                \n");
      out.write("  <div class=\"share_btn\">\n");
      out.write("    <span class=\"kakaoShare\" style=\"\"><img src=\"https://cdn-icons-png.flaticon.com/512/1828/1828960.png\"></span>\n");
      out.write("  </div>\n");
      out.write("  \n");
      out.write("</div> \n");
      out.write("              <!-------------------------- //상품 정보 호출 ---------------------------->\n");
      out.write("  \n");
      out.write("              <!-------------------------------------- 수량 ---------------------------------->\n");
      out.write("              <div class=\"SP_dtQuantity_wrap\">\n");
      out.write("                </div>\n");
      out.write("              <!-------------------------------------- 수량 ---------------------------------->\n");
      out.write("              <!------------------------- 개인결제창 네이버 마일리지 적립 사용 ------------------------------>\n");
      out.write("              <!-- <p class=\"displaynone\">\n");
      out.write("                <img src=\"//img.echosting.cafe24.com/skin/base_ko_KR/product/txt_naver.gif\" alt=\"개인결제창을 통한 결제 시 네이버 마일리지 적립 및 사용이 가능합니다.\">\n");
      out.write("              &nbsp;</p> -->\n");
      out.write("              <!------------------------- //개인결제창 네이버 마일리지 적립 사용 ------------------------------>\n");
      out.write("              <!------------------------- 옵션 출력 ------------------------------>\n");
      out.write("              \n");
      out.write("              <!------------------------- //옵션 출력 ------------------------------>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("              <!-- 추가구성상품 -->\n");
      out.write("             <!--  <div class=\"xans-element- xans-product xans-product-addproduct SP_productAddSet_wrap view open\"> -->\n");
      out.write("<div class=\"xans-element- xans-product xans-product-addproduct SP_productAddSet_wrap view open\">\n");
      out.write("    <div class=\"SP_prdAddSet_title\">\n");
      out.write("        <h3>추가구성상품</h3>\n");
      out.write("        <a href=\"javascript:void(0);\" class=\"SP_js_toggle_btn SP_prdAddSetToggle\"></a>\n");
      out.write("    </div>\n");
      out.write("    <ul class=\"SP_prdAddSetList_wrap\" style=\"display: block;\"></ul> <!-- 추가 구성 상품이 여기에 동적으로 삽입될 것입니다 -->\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("$(document).ready(function () {\n");
      out.write("    var productId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // JSP에서 렌더링된 pdt_id 값\n");
      out.write("    $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("\n");
      out.write("    // AJAX로 추가 구성 상품을 가져오는 코드\n");
      out.write("    $.ajax({\n");
      out.write("        url: \"/projectOhora/product/extraProducts.ajax\",\n");
      out.write("        dataType: \"json\",\n");
      out.write("        type: \"GET\",\n");
      out.write("        data: { \"product_id\": productId },\n");
      out.write("        cache: false,\n");
      out.write("        success: function (data) {\n");
      out.write("            var $productList = $(\".SP_prdAddSetList_wrap\");\n");
      out.write("\n");
      out.write("            $productList.empty(); // 기존 항목 초기화\n");
      out.write("\n");
      out.write("            data.forEach(function(product) {\n");
      out.write("                var imageUrl = product.pdt_img_url !== \"null\" ? product.pdt_img_url : \"../resources/images/prd_img/마롱네일1.jpg\"; // 기본 이미지 설정\n");
      out.write("                var formattedAmount = product.pdt_amount ? Number(product.pdt_amount).toLocaleString() : \"0\";\n");
      out.write("\n");
      out.write("                var productHtml = `\n");
      out.write("                    <li data-prd-num=\"${product.pdt_id}\" class=\"xans-record-\">\n");
      out.write("                        <div class=\"SP_addSetInfo\">\n");
      out.write("                            <div class=\"SP_addSetThumb\">\n");
      out.write("                                <a href=\"/product/${product.pdt_name}/${product.pdt_id}/\">\n");
      out.write("                                    <img src=\"${imageUrl}\" alt=\"${product.pdt_name}\" id=\"ec-add-product-composed-product-${product.pdt_id}\">\n");
      out.write("                                </a>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"SP_prdAddSetList\">\n");
      out.write("                                <ul style=\"padding-left: 10px;\">\n");
      out.write("                                    <li class=\"SP_addSetList_tt\">\n");
      out.write("                                        <div class=\"SP_prdAddSet_cont SP_prdAddSet_prdtt\">${product.pdt_name}</div>\n");
      out.write("                                    </li>\n");
      out.write("                                    <li class=\"desc\">${product.pdt_description}</li>\n");
      out.write("                                    <li class=\"add_prd_price\">\n");
      out.write("                                        <div class=\"SP_prdAddSet_cont SP_prdAddSet_price\">\n");
      out.write("                                            <span>${formattedAmount}</span>원\n");
      out.write("                                        </div>\n");
      out.write("                                    </li>\n");
      out.write("                                </ul>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"btn add-opt-click\">\n");
      out.write("                                <a href=\"javascript:void(0);\" class=\"add-product-btn\" data-id=\"${product.pdt_id}\" data-name=\"${product.pdt_name}\" data-price=\"${formattedAmount}\" onclick=\"lastPriceFunc();\">추가</a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </li>\n");
      out.write("                `;\n");
      out.write("                $productList.append(productHtml);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // `추가` 버튼 클릭 이벤트 핸들러\n");
      out.write("            $(document).on('click', \".btn.add-opt-click a\", function() {\n");
      out.write("                var productId = $(this).data(\"id\");\n");
      out.write("                var productName = $(this).data(\"name\");\n");
      out.write("                var productPrice = $(this).data(\"price\");\n");
      out.write("                \n");
      out.write("                \n");
      out.write("             // 쉼표 제거 후 숫자 변환\n");
      out.write("                var formattedPrice = Number(String(productPrice).replace(/,/g, \"\")) || 0;\n");
      out.write("\n");
      out.write("             // 콘솔에 데이터 확인\n");
      out.write("                console.log(\"Product ID:\", productId);\n");
      out.write("                console.log(\"Product Name:\", productName);\n");
      out.write("                console.log(\"Product Price:\", productPrice);\n");
      out.write("\n");
      out.write("             	// 회색 영역에 해당 상품이 이미 추가되었는지 확인\n");
      out.write("                if ($(\".add_product[data-option-add-index='\" + productId + \"']\").length > 0) {\n");
      out.write("                    alert(\"해당 옵션이 이미 추가되었습니다.\");\n");
      out.write("                    return; // 중복된 경우 추가하지 않음\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // 동적으로 회색 영역에 추가할 상품 HTML 템플릿\n");
      out.write("                var additionalProductHtml = `\n");
      out.write("				    <div class=\"add_product\" data-option-add-index=\"${productId}\">\n");
      out.write("				        <div class=\"product\">\n");
      out.write("				            <p>${productName}<br> - <span style=\"display: inline;\">${productName}</span></p>\n");
      out.write("				        </div>\n");
      out.write("				        <div class=\"quantity\">\n");
      out.write("				            <a href=\"javascript:void(0);\" id=\"selectedDown\" class=\"down eAddProductQuantityDownClass\" data-target=\"option_add_box${productId}_down\">-</a>\n");
      out.write("				            <input type=\"text\" id=\"option_add_box${productId}_quantity\" name=\"quantity_opt[]\" class=\"quantity_opt eAddProductQuantityClass\" value=\"1\" product-id=\"${productId}\" readonly>\n");
      out.write("				            <a href=\"javascript:void(0);\" id=\"selectedUp\" class=\"up eAddProductQuantityUpClass\" data-target=\"option_add_box${productId}_up\">+</a>\n");
      out.write("				        </div>\n");
      out.write("				        <div class=\"right\">\n");
      out.write("				            <span id=\"option_add_box${productId}_price\">\n");
      out.write("				                <input type=\"hidden\" class=\"add_product_option_box_price\" value=\"${productPrice}\" product-id=\"${productId}\">\n");
      out.write("				                <span class=\"ec-front-product-item-price\" product-id=\"${productId}\">${formattedPrice.toLocaleString()}</span>원\n");
      out.write("				            </span>\n");
      out.write("				        </div>\n");
      out.write("				        <div class=\"delete\" onclick=\"removeProduct(${productId})\">\n");
      out.write("				            ×\n");
      out.write("				        </div>\n");
      out.write("				    </div>\n");
      out.write("				`;\n");
      out.write("\n");
      out.write("                // 회색 영역에 추가구성상품 삽입\n");
      out.write("                $(\"#additional-product-list\").append(additionalProductHtml);\n");
      out.write("                $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("                lastPriceFunc();\n");
      out.write("            });   \n");
      out.write("        },\n");
      out.write("        error: function () {\n");
      out.write("            alert(\"추가 구성 상품을 불러오는 중 오류가 발생했습니다.\");\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("\n");
      out.write("// 선택된 상품 삭제 함수\n");
      out.write("function removeProduct(productId) {\n");
      out.write("    $(\"tr[data-option-add-index='\" + productId + \"']\").remove();\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<table class=\"add_products\" style=\"width: 100%\">\n");
      out.write("    <tbody id=\"additional-product-list\"></tbody>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>				 \n");
      out.write("    // 추가 구성상품 토글 function\n");
      out.write("	document.querySelector(\".SP_prdAddSetToggle\").onclick = function() {\n");
      out.write("	    var element = document.querySelector(\".SP_prdAddSetList_wrap\");\n");
      out.write("	    if (element.style.display === \"none\" || element.style.display === \"\") {\n");
      out.write("	        element.style.display = \"block\";  // 보이게 설정\n");
      out.write("	    } else {\n");
      out.write("	        element.style.display = \"none\";   // 숨기기\n");
      out.write("	    }\n");
      out.write("	};\n");
      out.write("\n");
      out.write("	// 선택상품 삭제 function\n");
      out.write("	$(document).on(\"click\", \".delete\", function() {\n");
      out.write("	    $(this).closest(\".add_product\").remove();\n");
      out.write("	    $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("	    lastPriceFunc();\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	// 특정 class로 input값 가져오기 (배열로 반환)\n");
      out.write("	var quantityInputs = document.querySelectorAll(\".quantity_opt\");\n");
      out.write("\n");
      out.write("	quantityInputs.forEach(function(input) {\n");
      out.write("	    console.log(\"input 총 갯수\" + input.value); // 각 input의 값을 출력\n");
      out.write("	});\n");
      out.write("  </script>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("\n");
      out.write("\n");
      out.write("  \n");
      out.write("              <!----------------------------------- 선택 상품 출력 영역 ----------------------------------->\n");
      out.write("              <div id=\"totalProducts\" class=\"SP_totalProducts\">\n");
      out.write("                <table border=\"0\" summary=\"\">\n");
      out.write("  </table>\n");
      out.write("  </div>\n");
      out.write("              <!----------------------------------- //선택 상품 출력 영역 ----------------------------------->\n");
      out.write("              <!----------------------------------- 최종 금액 ----------------------------------->\n");
      out.write("			  \n");
      out.write("\n");
      out.write("\n");
      out.write("              <div id=\"totalPrice\" class=\"SP_totalPrice\">\n");
      out.write("				    총 상품금액 (개수) : <span class=\"total SP_totalPriceNum\"><strong><em id=\"totalAmount\">0원</em></strong> <em id=\"totalQuantity\">(0개)</em></span>\n");
      out.write("				</div>			\n");
      out.write("				\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("//추가상품 기능\n");
      out.write("//수량 증가 및 감소 기능\n");
      out.write("	$(document).on(\"click\", \"#selectedDown\", function () {\n");
      out.write("		\n");
      out.write("	    const nextElement = $(this).next();\n");
      out.write("	    let value = parseInt(nextElement.val(), 10); // 값 가져오기 및 숫자로 변환\n");
      out.write("	    //console.log(\"값 확인 : \" + value); // 값 확인용\n");
      out.write("	    \n");
      out.write("	    if(value > 1){\n");
      out.write("	    	value = value - 1;\n");
      out.write("	    	nextElement.val(value); // 증가된 값을 다시 설정\n");
      out.write("	    }else{\n");
      out.write("	    	alert(\"최소 주문수량은 1개입니다.\");\n");
      out.write("	    }\n");
      out.write("	    \n");
      out.write("	 	// 현재 클릭된 버튼의 상품 정보를 가져옴\n");
      out.write("	    let productContainer = $(this).closest(\".add_product\"); // 상품 전체 컨테이너를 기준으로 접근\n");
      out.write("	    let optionProductPrice = parseInt(productContainer.find(\"input[type='hidden'].add_product_option_box_price\").val().replace(/,/g, \"\")) || 0;;\n");
      out.write("	    let optionAmount = parseInt(productContainer.find(\"input[type='text'][name='quantity_opt[]']\").val().replace(/,/g, \"\")) || 0;;\n");
      out.write("\n");
      out.write("	    // 총 가격 계산\n");
      out.write("	    let totalOptionProductPrice = optionProductPrice * optionAmount;\n");
      out.write("\n");
      out.write("	    // 현재 상품의 가격 업데이트\n");
      out.write("	    productContainer.find(\".ec-front-product-item-price\").text(totalOptionProductPrice.toLocaleString());\n");
      out.write("	    \n");
      out.write("	    $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("	    lastPriceFunc();\n");
      out.write("	    \n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	$(document).on(\"click\", \"#selectedUp\", function () {\n");
      out.write("		\n");
      out.write("		const prevElement = $(this).prev();\n");
      out.write("		let value = parseInt(prevElement.val(),10);\n");
      out.write("		//console.log(\"값 확인 : \" + value); // 값 확인용\n");
      out.write("		if(value >= 1){\n");
      out.write("			value = value + 1;\n");
      out.write("			prevElement.val(value);\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		// 현재 클릭된 버튼의 상품 정보를 가져옴\n");
      out.write("	    let productContainer = $(this).closest(\".add_product\"); // 상품 전체 컨테이너를 기준으로 접근\n");
      out.write("	    let optionProductPrice = parseInt(productContainer.find(\"input[type='hidden'].add_product_option_box_price\").val().replace(/,/g, \"\")) || 0;;\n");
      out.write("	    let optionAmount = parseInt(productContainer.find(\"input[type='text'][name='quantity_opt[]']\").val().replace(/,/g, \"\")) || 0;;\n");
      out.write("\n");
      out.write("	    // 총 가격 계산\n");
      out.write("	    let totalOptionProductPrice = optionProductPrice * optionAmount;\n");
      out.write("\n");
      out.write("	    // 현재 상품의 가격 업데이트\n");
      out.write("	    productContainer.find(\".ec-front-product-item-price\").text(totalOptionProductPrice.toLocaleString());\n");
      out.write("	    \n");
      out.write("	    $(\"#btnTotalAmountUpdate\").click();\n");
      out.write("	    lastPriceFunc();\n");
      out.write("	    \n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	let allOptionsTotalPrice = 0; // 전역 변수로 초기화\n");
      out.write("\n");
      out.write("	// 메인 상품 금액 변경\n");
      out.write("	let mainProductPrice = 0; // 메인 상품 1개 값\n");
      out.write("	let mainProductQuantity = 0; // 메인 상품 수량\n");
      out.write("	let totalMainProductPrice = 0; // 메인 상품 총 금액\n");
      out.write("	let safeMainProductQuantity; // null 체크한 메인 상품 수량\n");
      out.write("\n");
      out.write("	// 메인 상품 정보 가져오기\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	function calculateMainProductTotalPrice() {\n");
      out.write("		mainProductPrice = 0;\n");
      out.write("		mainProductQuantity = 0; \n");
      out.write("		totalMainProductPrice = 0;\n");
      out.write("		\n");
      out.write("		mainProductPrice = parseInt($(\".salesPrice\").text().replace(/,/g, '')) || 0;\n");
      out.write("		//mainProductQuantity = parseInt($(\"#option_main_quantity\").val().replace(/,/g, '')) || 0;\n");
      out.write("		safeMainProductQuantity = $(\"#option_main_quantity\").val() ? parseInt($(\"#option_main_quantity\").val().replace(/,/g, '')) : 0;\n");
      out.write("		\n");
      out.write("		totalMainProductPrice = safeMainProductQuantity * mainProductPrice;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("\n");
      out.write("	// 추가 상품 금액 변경\n");
      out.write("	let optionProductPrice = 0; // 옵션 상품 각각의 금액\n");
      out.write("	let optionAmount = 0; // 옵션 상품 각각의 수량\n");
      out.write("	let totalOptionProductPrice = 0; // 옵션 상품 각각의 총 금액 (금액 x 수량)\n");
      out.write("	let safeOptionProductPrice; // null 체크한 옵션 상품 각각의 금액\n");
      out.write("\n");
      out.write("	// 추가 상품 가격 가져오기\n");
      out.write("	//optionProductPrice = parseInt($(\"input[type='hidden'].add_product_option_box_price\").val().replace(/,/g, '')) || 0;\n");
      out.write("	optionAmount = parseInt($(\"input[type='text'][name='quantity_opt[]']\").val()) || 0;\n");
      out.write("	totalOptionProductPrice = safeOptionProductPrice * optionAmount;\n");
      out.write("	safeOptionProductPrice = $(\"input[type='hidden'].add_product_option_box_price\").val() ? parseInt($(\"input[type='hidden'].add_product_option_box_price\").val().replace(/,/g, '')) : 0;\n");
      out.write("\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	// 추가 상품의 총 금액을 표시\n");
      out.write("	$(\".ec-front-product-item-price\").text(totalOptionProductPrice.toLocaleString());\n");
      out.write("\n");
      out.write("	// 모든 선택된 추가 상품의 총 가격의 합을 계산하는 함수\n");
      out.write("	function calculateAllOptionsTotalPrice() {\n");
      out.write("	    allOptionsTotalPrice = 0; // 초기화하여 이전 값 누적 방지\n");
      out.write("	    $(\".ec-front-product-item-price\").each(function() {\n");
      out.write("	        allOptionsTotalPrice += parseInt($(this).text().replace(/,/g, '')) || 0;\n");
      out.write("	    });\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("\n");
      out.write("	// 전체 합산 금액 계산 함수\n");
      out.write("	function lastPriceFunc() {\n");
      out.write("	    \n");
      out.write("		// 메인 상품 총 가격 \n");
      out.write("		calculateMainProductTotalPrice();\n");
      out.write("	    // 모든 옵션 가격 합을 다시 계산\n");
      out.write("	    calculateAllOptionsTotalPrice();\n");
      out.write("\n");
      out.write("	    // 전체 합산 금액 계산\n");
      out.write("	    let lastPrice = totalMainProductPrice + allOptionsTotalPrice;\n");
      out.write("\n");
      out.write("	    // 결과를 표시\n");
      out.write("	    $(\"#totalAmount\").text(lastPrice.toLocaleString() + \"원\");\n");
      out.write("\n");
      out.write("	    console.log(\"메인 상품 총 금액:\", totalMainProductPrice);\n");
      out.write("	    console.log(\"옵션 상품 총 금액 합:\", allOptionsTotalPrice);\n");
      out.write("	    console.log(\"최종 총 금액:\", lastPrice);\n");
      out.write("	    \n");
      out.write("	}\n");
      out.write("\n");
      out.write("	// 문서 로드 시 초기 계산 실행\n");
      out.write("	$(document).ready(function() {\n");
      out.write("    	lastPriceFunc();\n");
      out.write("	});\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("              <!----------------------------------- //최종 금액 ----------------------------------->\n");
      out.write("              <!----------------------------------- SP_detailBuyBn_wrap ----------------------------------->\n");
      out.write("                          <!----------------------------------- //SP_detailBuyBn_wrap ----------------------------------->\n");
      out.write("              <!-- 상세페이지 배너 -->\n");
      out.write("              <!--<img src=\"/web/_event/0427_event8ver3/PC_detail_app.jpg\"/>-->\n");
      out.write("              <!--<a href=\"/product/list.html?cate_no=120\"><img src=\"/web/_event/0427_event8ver3/PC_detail_app6.jpg\"/></a>-->\n");
      out.write("              <!----------------------------------- 액션 버튼 영역 ----------------------------------->\n");
      out.write("				<div class=\"action_btn_wrap\">\n");
      out.write("					<div class=\"xans-element- xans-product xans-product-action \"\n");
      out.write("						style=\"width: 100%;\">\n");
      out.write("						<div class=\"SP_totalPrdOrderBtn_wrap\">\n");
      out.write("							<!-- //바로 구매 버튼 -->\n");
      out.write("							<a href=\"#none\" class=\"SP_cm_btn SP_btn_black_bg SP_buyBtn \"><span\n");
      out.write("								id=\"btnBuy\">바로 구매</span></a>\n");
      out.write("							<!-- //바로 구매 버튼 -->\n");
      out.write("							<!-- 장바구니 버튼 -->\n");
      out.write("							");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("<!-- //장바구니 버튼 -->\n");
      out.write("						</div>\n");
      out.write("						<div id=\"appPaymentButtonBox\"\n");
      out.write("							style=\"margin: 20px auto 0; display: inline-flex; flex-wrap: wrap; gap: 10px;\">\n");
      out.write("							<div id=\"kakao-checkout-button\"></div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<!----------------------------------- //액션 버튼 영역 ----------------------------------->\n");
      out.write("  <script>\n");
      out.write("  /* 바로구매 버튼 클릭 시 */\n");
      out.write("  $(document).on('click', 'a.SP_cm_btn.SP_btn_black_bg.SP_buyBtn', function(event) {\n");
      out.write("    event.preventDefault(); // 기본 링크 동작을 막음\n");
      out.write("    \n");
      out.write("    if ($(\"#option_main_quantity\").length > 0) {\n");
      out.write("    	const mainValue = $(\"#option_main_quantity\").val();\n");
      out.write("    	const mainProductId = $(\"#option_main_quantity\").attr('product-id');\n");
      out.write("    	\n");
      out.write("    	console.log(mainValue, mainProductId);\n");
      out.write("    	\n");
      out.write("    	let queryParams = `pdtId=${mainProductId}&pdtCount=${mainValue}`;\n");
      out.write("    	\n");
      out.write("    	const values = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).val();\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        const productIds = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).attr('product-id');\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        productIds.forEach((id, index) => {\n");
      out.write("            const value = values[index];\n");
      out.write("            if (queryParams.length > 0) {\n");
      out.write("                queryParams += \"&\"; // 각 파라미터를 연결하기 위한 구분자\n");
      out.write("            }\n");
      out.write("            queryParams += `pdtId=${encodeURIComponent(id)}&pdtCount=${encodeURIComponent(value)}`;\n");
      out.write("        });\n");
      out.write("        console.log(queryParams);\n");
      out.write("         \n");
      out.write("     	// 동적으로 href 속성 설정\n");
      out.write("        const fullUrl = `/projectOhora/product/orderpage.do?${queryParams}`;\n");
      out.write("        $(this).attr('href', fullUrl);\n");
      out.write("\n");
      out.write("        // 기본 링크 동작을 막았기 때문에 원래 동작을 실행시켜 주기\n");
      out.write("        window.location.href = fullUrl;\n");
      out.write("        \n");
      out.write("    } else {\n");
      out.write("    	const values = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).val();\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        const productIds = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).attr('product-id');\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        console.log(productIds, values);\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        // 파라미터 형식으로 이어붙이기\n");
      out.write("        let queryParams = \"\";\n");
      out.write("\n");
      out.write("        productIds.forEach((id, index) => {\n");
      out.write("            const value = values[index];\n");
      out.write("            if (queryParams.length > 0) {\n");
      out.write("                queryParams += \"&\"; // 각 파라미터를 연결하기 위한 구분자\n");
      out.write("            }\n");
      out.write("            queryParams += `pdtId=${encodeURIComponent(id)}&pdtCount=${encodeURIComponent(value)}`;\n");
      out.write("        });\n");
      out.write("        console.log(queryParams);\n");
      out.write("\n");
      out.write("        \n");
      out.write("        // 동적으로 href 속성 설정\n");
      out.write("        const fullUrl = `/projectOhora/product/orderpage.do?${queryParams}`;\n");
      out.write("        $(this).attr('href', fullUrl);\n");
      out.write("\n");
      out.write("        // 기본 링크 동작을 막았기 때문에 원래 동작을 실행시켜 주기\n");
      out.write("        window.location.href = fullUrl;\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    \n");
      out.write("\n");
      out.write("    \n");
      out.write(" 	\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("  </script>\n");
      out.write("  \n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("              <!------------------------- 배송 정보 / 오늘 도착 팝업------------------------------>\n");
      out.write("              <div class=\"deliver_con\">\n");
      out.write("						<table>\n");
      out.write("							<tbody class=\"delvtype\">\n");
      out.write("								<tr class=\"\">\n");
      out.write("									<th scope=\"row\">기본배송</th>\n");
      out.write("									<td class=\"delv_price\">\n");
      out.write("										<div>기본 3,000원 (5만원 이상 구매 시 무료)</div>\n");
      out.write("										<div>제주 및 특수 도서 산간 지역 3,000원 추가</div>\n");
      out.write("									</td>\n");
      out.write("								</tr>\n");
      out.write("							</tbody>\n");
      out.write("						</table>\n");
      out.write("			  </div>\n");
      out.write(" \n");
      out.write("              </div>\n");
      out.write("              <!------------------------- //배송 정보 / 오늘 도착 팝업------------------------------>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("  <!------------------------------ //SP_detailArea_wrap -------------------------------->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("      <!------------------------------ //product_detail 모듈 -------------------------------->\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("      </div>\n");
      out.write("      <!------------------------------ //쿠폰 다운로드 -------------------------------->\n");
      out.write("    </div>\n");
      out.write("    <!------------------------------ //레이아웃 -------------------------------->\n");
      out.write("    <!------------------------------ SP_detailRelationPrd_wrap -------------------------------->\n");
      out.write("    <!------------------------------ 레이아웃 -------------------------------->\n");
      out.write("    <div class=\"SP_detailLayout\" style=\"max-width: 1050px; margin: 0 auto;\">\n");
      out.write("      <!------------------------------ product_additional -------------------------------->\n");
      out.write("      <div class=\"xans-element- xans-product xans-product-additional \"><!------------------------------ 리뷰 -------------------------------->\n");
      out.write("      <div id=\"prdReview\" class=\"ec-base-tab grid5\">\n");
      out.write("          <!-------------------- 탭 영역 ------------------------->\n");
      out.write("          <ul class=\"SP_detailPrdTab_wrap\">\n");
      out.write("      <li class=\"selected\">\n");
      out.write("              <a href=\"#prdReview\">리뷰 <b class=\"Brev crema-product-reviews-count crema-applied\" data-product-code=\"2101\" data-format=\"({{{count}}})\" data-install-method=\"hardcoded\" data-observed-install=\"false\" data-applied-widgets=\"[&quot;.crema-product-reviews-count&quot;]\">(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_review_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</b></a>\n");
      out.write("            </li>\n");
      out.write("            <li><a href=\"#prdDetail\">상세정보</a></li>\n");
      out.write("            <!--li><a href=\"#recmdPrdWiget\" class=\"best_design\">추천디자인</a></li-->\n");
      out.write("            <li><a href=\"#prdQnA\">쇼핑안내</a></li>\n");
      out.write("            <!--li><a href=\"#prdFAQ\">FAQ</a></li-->\n");
      out.write("          </ul>\n");
      out.write("      <!-------------------- //탭 영역 ------------------------->\n");
      out.write("      <div class=\"SP_detailContainer\">\n");
      out.write("            <div class=\"SP_detailContants\">\n");
      out.write("              <div class=\"SP_detailBoard_wrap\">\n");
      out.write("                <!-- <div class=\"review_img\"><img src=\"/web/upload/review/reviewPlus_2.png\"></div> -->\n");
      out.write("                <!-- cre.ma / 리스트 위젯 / 스크립트를 수정할 경우 연락주세요 (support@cre.ma) -->\n");
      out.write("                <style>\n");
      out.write("                  #prdReview .nodata {\n");
      out.write("                    display: none;\n");
      out.write("                  }\n");
      out.write("                </style>\n");
      out.write("    \n");
      out.write("      <div class=\"SP_dtailReveiwBoard_wrap\">\n");
      out.write("          <div class=\"RV_wrap\" style=\"margin-top: 32px; margin-bottom: 32px; \">\n");
      out.write("          	<div class=\"RV_box\">\n");
      out.write("          	\n");
      out.write("          	<iframe src=\"");
      out.print(contextPath );
      out.write("/review/reviewlist.do?pdt_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"    display: block; visibility: visible; height: 1407px; width: 100%; iframe::-webkit-scrollbar{ }\"  >\n");
      out.write("          	</iframe>\n");
      out.write("          	\n");
      out.write("          	</div>\n");
      out.write("          </div>\n");
      out.write("      </div>\n");
      out.write("      </div>\n");
      out.write("                <div class=\"SP_tableBtn_wrap crema-hide crema-applied\" data-install-method=\"hardcoded\" data-observed-install=\"false\" data-applied-widgets=\"[&quot;.crema-hide, .crema-review-hide&quot;]\" style=\"display: none;\">\n");
      out.write("                  <div class=\"SP_tableBtnAlign_right\">\n");
      out.write("                    <a href=\"/board/product/list.html?board_no=4\" class=\"SP_cm_btn SP_btn_black_w2_bd\">모두보기</a>\n");
      out.write("                    <!-- <a href=\"/board/product/write.html?board_no=4&product_no=2101&cate_no=121&display_group=1\" class=\"SP_cm_btn SP_btn_blue_bg\">글쓰기</a> -->\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      <!------------------------------ //리뷰 -------------------------------->\n");
      out.write("      <!------------------------------ 상품 상세 정보 -------------------------------->\n");
      out.write("      <!-------------------- 탭 영역 ------------------------->\n");
      out.write("      <ul class=\"SP_detailPrdTab_wrap\">\n");
      out.write("        <li>\n");
      out.write("    <a href=\"#prdReview\">리뷰 <b class=\"Brev crema-product-reviews-count crema-applied\" data-product-code=\"2101\" data-format=\"({{{count}}})\" data-install-method=\"hardcoded\" data-observed-install=\"false\" data-applied-widgets=\"[&quot;.crema-product-reviews-count&quot;]\">(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_review_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</b></a>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"selected\"><a href=\"#prdDetail\">상세정보</a></li>\n");
      out.write("        <!--li><a href=\"#recmdPrdWiget\" class=\"best_design\">추천디자인</a></li-->\n");
      out.write("        <li><a href=\"#prdQnA\">쇼핑안내</a></li>\n");
      out.write("        <!--li><a href=\"#prdFAQ\">FAQ</a></li-->\n");
      out.write("      </ul>\n");
      out.write("      <!-------------------- //탭 영역 ------------------------->\n");
      out.write("    \n");
      out.write("      \n");
      out.write("          <!-- 여기에 상품 설명 이미지 -->\n");
      out.write("          <div id=\"prdDetail\" class=\"ec-base-tab grid5\">\n");
      out.write("          	<div id=\"prdDetailinner\" class=\"ec-base-tab grid6\">\n");
      out.write("          		<img loading=\"lazy\" src=\"https://www.ohora.kr/smartpc/_img/common/_detail/notice_final.jpg\">\n");
      out.write("          		<img loading=\"lazy\" src=\"https://www.ohora.kr/optimize/images/pc/detail/nail_Info.webp\">\n");
      out.write("          	</div>\n");
      out.write("          </div>\n");
      out.write("      \n");
      out.write("            \n");
      out.write("              <!------------------------------ //상품 상세 정보 -------------------------------->\n");
      out.write("              <!--함께 많이 구매한 디자인, 크루 추천 영역 리뷰 하단으로 이동--->\n");
      out.write("              \n");
      out.write("              \n");
      out.write("              \n");
      out.write("              <!------------------------------------ 함께 많이 구매한 디자인 -------------------------------------->\n");
      out.write("\n");
      out.write("			<div class=\"designBuyingWith\">\n");
      out.write("				<div class=\"textArea\">\n");
      out.write("					<h3>\n");
      out.write("						<strong>함께 많이 구매한 디자인</strong>\n");
      out.write("					</h3>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"common_list_box\">\n");
      out.write("					<div class=\"swiper-container swiper mySwiper\">\n");
      out.write("						<ul class=\"items-swiper-wrapper2 swiper-wrapper\">\n");
      out.write("\n");
      out.write("\n");
      out.write("						</ul>\n");
      out.write("\n");
      out.write("						<div class=\"swiper-scrollbar\"></div>\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("					<!-- 스와이퍼 컨테이너 -->\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			<script type=\"text/javascript\">\n");
      out.write("                const monthlyProductList = [\n");
      out.write("                    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                ];\n");
      out.write("                console.log(\"Monthly Product List:\", monthlyProductList);\n");
      out.write("            \n");
      out.write("                function createMonthlyProductItem(product) {\n");
      out.write("                    return `\n");
      out.write("                        <li id=\"item${product.id}\" class=\"item-swiper-slide swiper-slide\">\n");
      out.write("            <div class=\"container-complete\" data-prd-num=\"${product.id}\">\n");
      out.write("                <dl>\n");
      out.write("                    <a href=\"/projectOhora/product/view.do?product_id=${product.id}\" class=\"viewlink\"></a>\n");
      out.write("                    <div class=\"base-img\">\n");
      out.write("                        <div class=\"thumb\">\n");
      out.write("                            <img loading=\"lazy\" alt=\"\" class=\"thumb_img\" width=\"800\" height=\"800\" src=\"${product.imgUrl}\">\n");
      out.write("                        </div>\n");
      out.write("                        <span class=\"soldout-img\" style=\"display: none\">\n");
      out.write("                            <a href=\"/projectOhora/product/view.do?product_id=${product.id}\">\n");
      out.write("                                <span>coming<br>soon</span>\n");
      out.write("                            </a>\n");
      out.write("                        </span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"base-mask\">\n");
      out.write("                        <dd class=\"name-container\">\n");
      out.write("                            <p class=\"name\"><span>${product.name}</span></p>\n");
      out.write("                        </dd>\n");
      out.write("                        <dd class=\"price-container\">\n");
      out.write("                            <p class=\"normal-price\">${product.normalPrice.toLocaleString()}</p>\n");
      out.write("                            <p class=\"sale-price\">${product.salePrice.toLocaleString()}</p>\n");
      out.write("                            <p class=\"discount\">${product.discount}%</p>\n");
      out.write("                        </dd>\n");
      out.write("                        <dd class=\"prdRegiDate\">등록일</dd>\n");
      out.write("                        <div class=\"prdInfoBot\">\n");
      out.write("                            <div class=\"rvCount\">\n");
      out.write("                                <div class=\"rvWrap\">\n");
      out.write("                                    <p class=\"rv_count_wrap\"><span class=\"rv_count_value\">${product.reviewCount}</span></p>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"into_cart\">\n");
      out.write("                            <img class=\"cart_icon\" src=\"https://img.echosting.cafe24.com/design/skin/admin/ko_KR/btn_list_cart.gif\" alt=\"카트 아이콘\" onclick=\"addToCart(${product.id})\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"only_info_dispNone\">\n");
      out.write("                            <span style=\"font-size:12px;color:#555555;\">#네일 #젤스트립 #핑크 #프렌치 #자석 #글리터 #골드</span>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </dl>\n");
      out.write("            </div>\n");
      out.write("                        </li>\n");
      out.write("                    `;\n");
      out.write("                }\n");
      out.write("            \n");
      out.write("                function renderMonthlyProductList(productList) {\n");
      out.write("                    const productContainer = document.querySelector(\".items-swiper-wrapper2\");\n");
      out.write("                    if (!productContainer) {\n");
      out.write("                        console.error(\"Error: .items-swiper-wrapper2 요소를 찾을 수 없습니다.\");\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                    productList.forEach(product => {\n");
      out.write("                        productContainer.innerHTML += createMonthlyProductItem(product);\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            \n");
      out.write("                document.addEventListener(\"DOMContentLoaded\", function() {\n");
      out.write("                    renderMonthlyProductList(monthlyProductList);\n");
      out.write("                });\n");
      out.write("            </script>\n");
      out.write("            \n");
      out.write("              <!------------------------------------  //함께 많이 구매한 디자인 -------------------------------------->\n");
      out.write("              <!---------------------------------------- 오호라 크루 추천 ------------------------------------------->\n");
      out.write("            	<div class=\"prdDetail_crew not_slide\">\n");
      out.write("            		<!--오호라 크루 추천-->\n");
      out.write("            		<div class=\"common_reco_section recommend_crew swiper-container\">\n");
      out.write("            			<h3>오호라 크루 추천</h3>\n");
      out.write("            			<div df-banner-code=\"common-recommend\"\n");
      out.write("            				class=\"recommend_banner_wrap swiper-wrapper df-bannermanager df-bannermanager-common-recommend\">\n");
      out.write("            				<div df-banner-clone=\"\" class=\"SP_eventBn_li swiper-slide\">\n");
      out.write("            					<a\n");
      out.write("            						href=\"https://events.payco.com/web/share.nhn?evntPageNm=75c7Pl3&amp;pubCode=PUBSTJUOE9\"><div\n");
      out.write("            							class=\"imgBox\">\n");
      out.write("            							<img\n");
      out.write("            								src=\"	https://www.ohora.kr/web/upload/appfiles/ZaReJam3QiELznoZeGGkMG/94fad6d6474acf635b9c771591480a7c.png\"\n");
      out.write("            								alt=\"페이코 상시 12% 할인\">\n");
      out.write("            						</div>\n");
      out.write("            						<div class=\"txtBox\">페이코 상시 12% 할인</div></a>\n");
      out.write("            				</div>\n");
      out.write("            				<div df-banner-clone=\"\" class=\"SP_eventBn_li swiper-slide\">\n");
      out.write("            					<a\n");
      out.write("            						href=\"https://play.google.com/store/apps/details?id=com.cafe24.ec.plusohora2019\"><div\n");
      out.write("            							class=\"imgBox\">\n");
      out.write("            							<img\n");
      out.write("            								src=\"https://www.ohora.kr/web/upload/appfiles/ZaReJam3QiELznoZeGGkMG/4cd90f97beaaeddde49bbad02da10bc5.webp\"\n");
      out.write("            								alt=\"앱 다운 시 무료배송\">\n");
      out.write("            						</div>\n");
      out.write("            						<div class=\"txtBox\">앱 다운 시 무료배송</div></a>\n");
      out.write("            				</div>\n");
      out.write("            				<div df-banner-clone=\"\" class=\"SP_eventBn_li swiper-slide\">\n");
      out.write("            					<a href=\"https://www.ohora.kr/event/event6.html\">\n");
      out.write("            					<div class=\"imgBox\">\n");
      out.write("            							<img\n");
      out.write("            								src=\"https://www.ohora.kr/web/upload/appfiles/ZaReJam3QiELznoZeGGkMG/0b48933209882b54093f40d23cb23246.webp\"\n");
      out.write("            								alt=\"신규회원 젤램프 증정\">\n");
      out.write("            					</div>\n");
      out.write("            						<div class=\"txtBox\">신규회원 젤램프 증정</div>\n");
      out.write("            				</div>\n");
      out.write("            			</div>\n");
      out.write("            			<!-- Add Pagination -->\n");
      out.write("            			<div class=\"swiper-scrollbar\"></div>\n");
      out.write("            		</div>\n");
      out.write("            	</div>\n");
      out.write("            						<!--// 오호라 크루 추천-->\n");
      out.write("              <!--------------------------------------// 오호라 크루 추천 ------------------------------------------->\n");
      out.write("              <!-------------------- 탭 영역 ------------------------->\n");
      out.write("              <ul class=\"SP_detailPrdTab_wrap\">\n");
      out.write("                <li>\n");
      out.write("                  <a href=\"#prdReview\">리뷰 <b class=\"Brev crema-product-reviews-count crema-applied\" data-product-code=\"2101\" data-format=\"({{{count}}})\" data-install-method=\"hardcoded\" data-observed-install=\"false\" data-applied-widgets=\"[&quot;.crema-product-reviews-count&quot;]\">(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_review_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</b></a>\n");
      out.write("                </li>\n");
      out.write("                <li><a href=\"#prdDetail\">상세정보</a></li>\n");
      out.write("                <li class=\"selected\"><a href=\"#prdQnA\">쇼핑안내</a></li>\n");
      out.write("              </ul>       \n");
      out.write("              <!-------------------- //탭 영역 ------------------------->\n");
      out.write("              <div id=prdQnA class=\"SP_detailContainer\">\n");
      out.write("                          <div class=\"SP_detailContants\">\n");
      out.write("            <div class=\"SP_detailBoard_wrap\">\n");
      out.write("              <h3 class=\"infoTit\">배송안내</h3>\n");
      out.write("              <!--\n");
      out.write("                            <table class=\"infoTbl\">\n");
      out.write("                                <colgroup>\n");
      out.write("                                    <col width=\"215px\"/>\n");
      out.write("                                    <col width=\"*\"/>\n");
      out.write("                                </colgroup>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>배송방법</th>\n");
      out.write("                                    <td>CJ대한통운(1588-1255) , 한진택배(1588-0011)</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>배송지역</th>\n");
      out.write("                                    <td>전국</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>배송비</th>\n");
      out.write("                                    <td>3,000원 (5만원 이상 구매 시 무료배송)<br/>\n");
      out.write("                                        * 제주 및 특수 도서 산간 지역은 별도 추가 운임 발생</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>배송기간</th>\n");
      out.write("                                    <td>\n");
      out.write("                                        <b>* 출고일로부터 평균 2~3일 정도 소요됩니다. (주말/공휴일 제외)</b><br/>\n");
      out.write("                                        <b>* 상품 출고 시 송장 번호가 알림톡 또는 SMS로 발송됩니다.</b><br/>\n");
      out.write("                                        <b>* 모든 배송은 지역 택배사 사정과 천재지변으로 지연될 수 있습니다.</b><br/>\n");
      out.write("                                        <b>* 배송 폭주, 입고지연, 품절 등으로 인한 미출고 시 별도 안내 드립니다.</b>										\n");
      out.write("                                    </td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>주의사항</th>\n");
      out.write("                                    <td><b>* 주문 내역의 교환/취소/주소지 변경을 원하실 경우 고객센터로 연락 바랍니다.</b><br/>\n");
      out.write("                                        <b>* 주문 취소를 희망하는 경우 MY PAGE -> 주문 상세정보에서 직접 가능합니다.</b><br/>\n");
      out.write("                                        (상품 준비 중인 상태에서만 가능하며, 배송 준비 중/배송 중 상태에서는 추가 배송비가 부가될 수 있습니다.)</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>고객센터</th>\n");
      out.write("                                    <td>1566-0554 / 카카오톡 플러스친구 @ohora <br/>\n");
      out.write("                                운영시간 : 365일 09:00 - 18:00 (점심시간 11:50 - 13:00)\n");
      out.write("                                </tr>\n");
      out.write("                            </table>\n");
      out.write("                            -->\n");
      out.write("              <table class=\"infoTbl\">\n");
      out.write("              <colgroup>\n");
      out.write("              <col width=\"215px\">\n");
      out.write("              <col width=\"*\">\n");
      out.write("              </colgroup>\n");
      out.write("              <tbody><tr>\n");
      out.write("              <th>배송방법</th>\n");
      out.write("                  <td>\n");
      out.write("              <b> 기본 배송 : 롯데택배(1588-2121) </b><br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>배송지역</th>\n");
      out.write("                  <td>\n");
      out.write("              <b> 기본 배송 : 전국</b><br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>배송비</th>\n");
      out.write("                  <td>\n");
      out.write("                    <b> 기본 배송 : 3,000원 (5만원 이상 구매 시 무료배송)</b><br>\n");
      out.write("                    * 제주 및 특수 도서 산간 지역은 3,000원의 별도 추가 운임비 발생<br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>배송기간</th>\n");
      out.write("                  <td>\n");
      out.write("                    <b>[기본 배송]</b><br><b>* 평일 오후 2시 결제 완료 시 당일 출고됩니다. (주말/공휴일 제외)</b><br><b>* 상품 출고 시 송장 번호가 알림톡 또는 SMS로 발송됩니다.</b><br><b>* 모든 배송은 지역 택배사 사정과 천재지변으로 지연될 수 있습니다.</b><br><b>* 배송 폭주, 입고지연, 품절 등으로 인한 미출고 시 별도 안내 드립니다.</b> <br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>주의사항</th>\n");
      out.write("                  <td>\n");
      out.write("                    <b>* 주문 내역의 교환/취소/주소지 변경을 원하실 경우 고객센터로 연락 바랍니다.</b><br><b>* 주문 취소를 희망하는 경우 MY PAGE -&gt; 주문 상세정보에서 직접 접수 가능합니다.</b><br>\n");
      out.write("                    (배송준비중 상태의 주문 건을 취소 접수할 경우, 출고 상황에 따라 취소가 거부될 수 있습니다.)<br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>고객센터</th>\n");
      out.write("                  <td>\n");
      out.write("                    카카오톡 상담 (@ohora), 게시판 상담 (1:1 문의하기) <br>\n");
      out.write("                    운영시간 : 평일 09:00 - 18:00 (Lunch 12:30 - 13:30) <br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              </tbody></table>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("            \n");
      out.write("              <h3 class=\"infoTit\">교환/반품 안내</h3>\n");
      out.write("              <table class=\"infoTbl\">\n");
      out.write("              <colgroup>\n");
      out.write("              <col width=\"215px\">\n");
      out.write("              <col width=\"*\">\n");
      out.write("              </colgroup>\n");
      out.write("              <tbody><tr>\n");
      out.write("              <th>교환/반품 신청기준</th>\n");
      out.write("                  <td>\n");
      out.write("                    <b>&lt;교환/반품 신청이 가능한 경우&gt;</b><br>\n");
      out.write("                    * 단순 변심으로 인한 교환 및 반품은 <b>제품 수령 후 주말 및 공휴일 포함 7일 이내</b>에 가능합니다. (배송비 고객부담)<br>\n");
      out.write("                    * 상품 불량으로 인한 교환 및 반품은 상품 공급일로부터 3개월 이내에 가능합니다. (기간엄수)<br>\n");
      out.write("                    (단, 상품 불량의 경우, 고객센터를 통한 불량 검수 후 정상 처리 여부가 결정됩니다.)<br>\n");
      out.write("                    * 옵션 오선택으로 인한 반품 및 교환 시에는 추가 배송비가 발생할 수 있습니다.<br>\n");
      out.write("                    * 상품 불량으로 인한 반품 및 교환을 원하시는 경우, 카톡 플러스친구 상담으로 접수 부탁드립니다.<br>\n");
      out.write("                    (불량 여부 확인 및 제품 품질 개선을 위하여 내용물 사진 등 제품에 대한 상세한 정보를 준비 부탁드립니다.)<br><br><b>&lt;교환/반품이 불가능한 경우&gt;</b><br>\n");
      out.write("                    * 소비자의 귀책 사유에 의한 상품 훼손(개봉) 및 사용에 의해 상품 가치가 현저히 감소한 경우 교환 및 반품이 불가합니다.<br>\n");
      out.write("                    * 교환 및 반품으로 인해 사은품 혜택 기준에 미달되었을 경우, 사은품도 함께 보내주셔야 정상적으로 처리 가능합니다.<br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>교환/반품 배송비</th>\n");
      out.write("                  <td>제품 하자가 아닌 단순 변심에 의한 경우 배송비를 제외한 나머지 금액만 환불 처리됩니다.</td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>교환/반품 접수방법</th>\n");
      out.write("                  <td>\n");
      out.write("                    * 교환 및 반품 접수 문의는 고객센터로 연락 부탁드립니다.<br>\n");
      out.write("                    * 제품 수거는 교환 및 반품 신청 접수 후 오호라에서 순차 처리합니다.\n");
      out.write("                  </td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>주의사항</th>\n");
      out.write("                  <td>* 교환 및 반품 신청 시 신청 가능 기간을 엄수해주세요.</td>\n");
      out.write("                </tr>\n");
      out.write("              <tr>\n");
      out.write("              <th>고객센터</th>\n");
      out.write("                  <td>\n");
      out.write("                    카카오톡 상담 (@ohora), 게시판 상담 (1:1 문의하기) <br>\n");
      out.write("                    운영시간 : 평일 09:00 - 18:00 (Lunch 12:30 - 13:30) <br>\n");
      out.write("              </td>\n");
      out.write("                </tr>\n");
      out.write("              </tbody></table>\n");
      out.write("              					</div>\n");
      out.write("                         </div> \n");
      out.write("                          \n");
      out.write("                        </div><!-- 여기까지 배송이랑 QnA -->\n");
      out.write("      <!------------------------------ //prdQnA --------------------------------->\n");
      out.write("    \n");
      out.write("        </div> <!-- <div id=\"prdDetail\" class=\"ec-base-tab grid5\">까지 -->\n");
      out.write("        <!------------------------------ //SP_detailRelationPrd_wrap -------------------------------->\n");
      out.write("      </div>\n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("\n");
      out.write("	$(\"#btnTotalAmountUpdate\").on(\"click\", function inputUpdate() {\n");
      out.write("		\n");
      out.write("		let totalCountSum = 0;\n");
      out.write("	\n");
      out.write("		$(\"input[id^='option_']\").each(function() {\n");
      out.write("		    // 각 input 요소의 value 값을 숫자로 변환하여 누적 합산\n");
      out.write("		    totalCountSum += parseFloat($(this).val()) || 0; // NaN 방지를 위해 기본값 0 사용\n");
      out.write("		});\n");
      out.write("	\n");
      out.write("		$(\"#totalQuantity\").text(\"(\" + totalCountSum + \"개)\");\n");
      out.write("		console.log(\"총 input 갯수 : \" + totalCountSum); // 모든 값의 합계가 출력됩니다.\n");
      out.write("	\n");
      out.write("	})\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	$(document).on(\"input\", \"input[id^='option_']\", function () {\n");
      out.write("    let totalCountSum = 0;\n");
      out.write("    \n");
      out.write("    $(\"input[id^='option_']\").each(function() {\n");
      out.write("        // 각 input 요소의 value 값을 숫자로 변환하여 누적 합산\n");
      out.write("        totalCountSum += parseFloat($(this).val()) || 0; // NaN 방지를 위해 기본값 0 사용\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    $(\"#totalQuantity\").text(\"(\" + totalCountSum + \"개)\");\n");
      out.write("    console.log(\"총 input 갯수 : \" + totalCountSum); // 모든 값의 합계가 출력됩니다.\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var swiper = new Swiper(\".mySwiper\", {\n");
      out.write("        loop:true,\n");
      out.write("      pagination: {\n");
      out.write("        el: \".swiper-pagination\",\n");
      out.write("        centeredSlides: true,\n");
      out.write("        clickable: true,\n");
      out.write("        renderBullet: function (index, className) {\n");
      out.write("          return '<span class=\"' + className + '\">' + (index + 1) + \"</span>\";\n");
      out.write("        },\n");
      out.write("      },\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var swiper = new Swiper(\".mySwiper2\", {\n");
      out.write("      slidesPerView: 'auto', // 자동 너비 조절\n");
      out.write("      scrollbar: {\n");
      out.write("        el: \".swiper-scrollbar\",\n");
      out.write("        hide: false,\n");
      out.write("        draggable: true, \n");
      out.write("      },\n");
      out.write("      \n");
      out.write("      navigation: {\n");
      out.write("        nextEl: \".swiper-button-next\",\n");
      out.write("        prevEl: \".swiper-button-prev\",\n");
      out.write("      },\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var swiper = new Swiper(\".mySwiper3\", {\n");
      out.write("      slidesPerView: 'auto', // 자동 너비 조절\n");
      out.write("      scrollbar: {\n");
      out.write("        el: \".swiper-scrollbar\",\n");
      out.write("        hide: false,\n");
      out.write("        draggable: true, \n");
      out.write("      },\n");
      out.write("      \n");
      out.write("      navigation: {\n");
      out.write("        nextEl: \".swiper-button-next2\",\n");
      out.write("        prevEl: \".swiper-button-prev2\",\n");
      out.write("      },\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var swiper = new Swiper(\".mySwiper4\", {\n");
      out.write("        loop:true,\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var swiper = new Swiper(\".mySwiper5\", {\n");
      out.write("      effect: \"coverflow\",\n");
      out.write("      grabCursor: true,\n");
      out.write("      centeredSlides: true,\n");
      out.write("      slidesPerView: \"auto\",\n");
      out.write("      loop:true,\n");
      out.write("      coverflowEffect: {\n");
      out.write("        rotate: 50,\n");
      out.write("        stretch: 0,\n");
      out.write("        depth: 100,\n");
      out.write("        modifier: 1,\n");
      out.write("        slideShadows: true,\n");
      out.write("      }\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("  \n");
      out.write("  <script>\n");
      out.write("// 장바구니 버튼\n");
      out.write("$(\"#addCartBtn\").on(\"click\", function(){\n");
      out.write("   \n");
      out.write("   event.preventDefault(); // 기본 링크 동작을 막음\n");
      out.write("    \n");
      out.write("    if ($(\"#option_main_quantity\").length > 0) {\n");
      out.write("       const mainValue = $(\"#option_main_quantity\").val();\n");
      out.write("       const mainProductId = $(\"#option_main_quantity\").attr('product-id');\n");
      out.write("       \n");
      out.write("       console.log(mainValue, mainProductId);\n");
      out.write("       \n");
      out.write("       let queryParams = `pdtId=${mainProductId}&pdtCount=${mainValue}`;\n");
      out.write("       \n");
      out.write("       const values = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).val();\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        const productIds = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).attr('product-id');\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        productIds.forEach((id, index) => {\n");
      out.write("            const value = values[index];\n");
      out.write("            if (queryParams.length > 0) {\n");
      out.write("                queryParams += \"&\"; // 각 파라미터를 연결하기 위한 구분자\n");
      out.write("            }\n");
      out.write("            queryParams += `pdtId=${encodeURIComponent(id)}&pdtCount=${encodeURIComponent(value)}`;\n");
      out.write("        });\n");
      out.write("        console.log(queryParams);\n");
      out.write("         \n");
      out.write("        // 동적으로 href 속성 설정\n");
      out.write("        const fullUrl = `/projectOhora/product/addcartbtn.do?${queryParams}`;\n");
      out.write("        $(this).attr('href', fullUrl);\n");
      out.write("\n");
      out.write("        // 기본 링크 동작을 막았기 때문에 원래 동작을 실행시켜 주기\n");
      out.write("        window.location.href = fullUrl;\n");
      out.write("        \n");
      out.write("    } else {\n");
      out.write("       const values = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).val();\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        const productIds = $(\"input[type='text'][name='quantity_opt[]']\").map(function() {\n");
      out.write("            return $(this).attr('product-id');\n");
      out.write("        }).get();\n");
      out.write("        \n");
      out.write("        console.log(productIds, values);\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        // 파라미터 형식으로 이어붙이기\n");
      out.write("        let queryParams = \"\";\n");
      out.write("\n");
      out.write("        productIds.forEach((id, index) => {\n");
      out.write("            const value = values[index];\n");
      out.write("            if (queryParams.length > 0) {\n");
      out.write("                queryParams += \"&\"; // 각 파라미터를 연결하기 위한 구분자\n");
      out.write("            }\n");
      out.write("            queryParams += `pdtId=${encodeURIComponent(id)}&pdtCount=${encodeURIComponent(value)}`;\n");
      out.write("        });\n");
      out.write("        console.log(queryParams);\n");
      out.write("\n");
      out.write("        \n");
      out.write("        // 동적으로 href 속성 설정\n");
      out.write("        const fullUrl = `/projectOhora/product/addcartbtn.do?${queryParams}`;\n");
      out.write("        $(this).attr('href', fullUrl);\n");
      out.write("\n");
      out.write("        // 기본 링크 동작을 막았기 때문에 원래 동작을 실행시켜 주기\n");
      out.write("        window.location.href = fullUrl;\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("   \n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("<script src=\"/projectOhora/resources/js/oho_main.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("// 쿠키 설정 함수\n");
      out.write("function setCookie(name, value, days) {\n");
      out.write("    let expires = '';\n");
      out.write("    if (days) {\n");
      out.write("        const date = new Date();\n");
      out.write("        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n");
      out.write("        expires = '; expires=' + date.toUTCString();\n");
      out.write("    }\n");
      out.write("    document.cookie = name + '=' + encodeURIComponent(value) + expires + '; path=/';\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 쿠키 가져오기 함수\n");
      out.write("function getCookie(name) {\n");
      out.write("    const nameEQ = name + '=';\n");
      out.write("    const ca = document.cookie.split(';');\n");
      out.write("    for (let i = 0; i < ca.length; i++) {\n");
      out.write("        let c = ca[i];\n");
      out.write("        while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n");
      out.write("        if (c.indexOf(nameEQ) === 0) return decodeURIComponent(c.substring(nameEQ.length, c.length));\n");
      out.write("    }\n");
      out.write("    return null;\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("    $(\".SP_cartBtn\").on(\"click\", function() {\n");
      out.write("        if (window.hasProductCountSession) {\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // 장바구니에 담을 상품들을 저장할 배열\n");
      out.write("        let cartItems = [];\n");
      out.write("        \n");
      out.write("        // 메인 상품이 있는 경우 처리\n");
      out.write("        const mainQuantityInput = document.getElementById(\"option_main_quantity\");\n");
      out.write("        if (mainQuantityInput) {\n");
      out.write("            cartItems.push({\n");
      out.write("                id: mainQuantityInput.getAttribute('product-id'),\n");
      out.write("                quantity: parseInt(mainQuantityInput.value)\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // 추가 상품들 처리\n");
      out.write("        const additionalProducts = document.querySelectorAll(\".quantity_opt\");\n");
      out.write("        additionalProducts.forEach(product => {\n");
      out.write("            cartItems.push({\n");
      out.write("                id: product.getAttribute('product-id'),\n");
      out.write("                quantity: parseInt(product.value)\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        // 기존 장바구니 쿠키 확인\n");
      out.write("        let existingCart = getCookie('basketItems');\n");
      out.write("        let updatedCart = [];\n");
      out.write("        \n");
      out.write("        if (existingCart) {\n");
      out.write("            try {\n");
      out.write("                updatedCart = JSON.parse(existingCart);\n");
      out.write("                \n");
      out.write("                // 새로운 아이템들을 기존 장바구니에 추가/업데이트\n");
      out.write("                cartItems.forEach(newItem => {\n");
      out.write("                    const existingItemIndex = updatedCart.findIndex(item => item.id === newItem.id);\n");
      out.write("                    \n");
      out.write("                    if (existingItemIndex !== -1) {\n");
      out.write("                        // 기존 상품이 있으면 수량 증가\n");
      out.write("                        updatedCart[existingItemIndex].quantity += newItem.quantity;\n");
      out.write("                    } else {\n");
      out.write("                        // 새로운 상품이면 추가\n");
      out.write("                        updatedCart.push(newItem);\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            } catch (e) {\n");
      out.write("                console.error('장바구니 쿠키 파싱 오류:', e);\n");
      out.write("                updatedCart = cartItems;\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            updatedCart = cartItems;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // 쿠키에 장바구니 저장 (24시간 유효)\n");
      out.write("        setCookie('basketItems', JSON.stringify(updatedCart), 1);\n");
      out.write("        \n");
      out.write("        // 장바구니 카운트 업데이트 (header.jsp의 함수 호출)\n");
      out.write("        if (typeof updateCartCountFromCookie === 'function') {\n");
      out.write("            updateCartCountFromCookie();\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        alert('상품이 장바구니에 담겼습니다.');\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("    // 초기 계산 실행\n");
      out.write("    lastPriceFunc();\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("   \n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /ohora/prd_detail_view.jsp(645,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<a href=\"#none\" class=\"SP_cm_btn SP_cartBtn \" id=\"addCartBtn\"\n");
          out.write("                           onclick=\"addtoCart();\">장바구니 담기</a>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<a href=\"#none\" class=\"SP_cm_btn SP_cartBtn \">장바구니 담기</a>                        \n");
          out.write("                           <!-- //장바구니 버튼 -->\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /ohora/prd_detail_view.jsp(888,20) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("product");
      // /ohora/prd_detail_view.jsp(888,20) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/ohora/prd_detail_view.jsp(888,20) '${productList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${productList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /ohora/prd_detail_view.jsp(888,20) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /ohora/prd_detail_view.jsp(889,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index >= 20 && status.index < 8}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("            {\n");
          out.write("                id: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\n");
          out.write("                name: \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\",\n");
          out.write("                normalPrice: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\n");
          out.write("                salePrice: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_discount_amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\n");
          out.write("                discount: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_discount_rate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\n");
          out.write("                imgUrl: \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\",\n");
          out.write("                imgUrl2: \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_img_url2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\",\n");
          out.write("                reviewCount: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.pdt_review_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("            }");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /ohora/prd_detail_view.jsp(899,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index < 7}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
